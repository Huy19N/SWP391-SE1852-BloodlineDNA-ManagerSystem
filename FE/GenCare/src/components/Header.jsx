import { NavLink } from 'react-router-dom';
import React, { useState, useEffect } from 'react';
import { useNavigate } from "react-router-dom";
 import { ToastContainer, toast } from 'react-toastify';
//import '../css/LightMode.css';

export default function Header(){
    const [darkMode, setDarkMode] = useState(false);
    const navigate = useNavigate();

    useEffect(() => {
        if (darkMode) {
            document.body.classList.add('dark-mode');
        } else {
            document.body.classList.remove('dark-mode');
        }
    }, [darkMode]);

    // H√†m ƒëƒÉng xu·∫•t
    const handleLogout = () => {
        // X√≥a token v√† roleId kh·ªèi localStorage
        localStorage.removeItem('token');
        localStorage.removeItem('roleId');
        // Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ƒëƒÉng nh·∫≠p ho·∫∑c trang ch·ªß
        navigate('/login')
        toast.success("ƒêƒÉng xu·∫•t th√†nh c√¥ng!")
    };

    // H√†m n√†y s·∫Ω thay ƒë·ªïi login khi ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p, n·∫øu ƒë√£ ƒëƒÉng nh·∫≠p th√¨ s·∫Ω hi·ªán account v√† n√≥ s·∫Ω dropdown menu xu·ªëng hi·ªán c√°c nh∆∞ logout v√† information v√† l·ªãch s·ª≠ x√©t nghi·ªám c√≤n
    // n·∫øu l√† admin th√¨ dropdown menu s·∫Ω hi·ªán management v√† logout
    const handleLogin = () => {
        // Ki·ªÉm tra xem ng∆∞·ªùi d√πng ƒë√£ ƒëƒÉng nh·∫≠p hay ch∆∞a
        const isLoggedIn = localStorage.getItem('token'); //l·∫•y token ƒëƒÉng nh·∫≠p trong localStorage
        if (isLoggedIn) {
            const roleId = localStorage.getItem('roleId'); //l·∫•y roleId ƒëƒÉng nh·∫≠p trong localStorage
            // Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ ph·∫£i l√† admin hay kh√¥ng
            const isAdmin = roleId === '4';
            const isStaff = roleId === '2';
            const isManager = roleId === '3';
            if (isAdmin || isStaff || isManager) {
                // N·∫øu l√† admin, hi·ªÉn th·ªã menu qu·∫£n l√Ω
                return (
                    <li className="nav-item dropdown">
                        <a className="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Management
                        </a>
                        <ul className="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><NavLink className="dropdown-item" to="/layout">Dashboard</NavLink></li>
                            <li><NavLink className="dropdown-item" to="/account">Information</NavLink></li>
                            <li><hr className="dropdown-divider" /></li>
                            {localStorage.getItem('token') ? (
                                <li className="nav-item">
                                    <button className="btn btn-link nav-link text-dark" onClick={handleLogout}>Logout</button>
                                </li>
                            ) : (
                                <NavLink className="nav-link text-dark" to="/login">Login</NavLink>
                            )}
                        </ul>
                    </li>
                );
            }
            // N·∫øu l√† ng∆∞·ªùi d√πng b√¨nh th∆∞·ªùng, hi·ªÉn th·ªã menu t√†i kho·∫£n
            else if (roleId === '1') {
                return (
                <li className="nav-item dropdown">
                    <a className="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Account
                    </a>
                    <ul className="dropdown-menu" aria-labelledby="navbarDropdown">
                        <li><NavLink className="dropdown-item" to="/account">Information</NavLink></li>
                        <li><NavLink className="dropdown-item" to="/test-history">My Booking</NavLink></li>
                        <li><hr className="dropdown-divider" /></li>
                        {localStorage.getItem('token') ? (
                                <li className="nav-item">
                                    <button className="btn btn-link nav-link text-dark" onClick={handleLogout}>Logout</button>
                                </li>
                            ) : (
                                <NavLink className="nav-link text-dark" to="/login">Login</NavLink>
                            )}
                    </ul>
                </li>
                );
            }
        } else {
            // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, hi·ªÉn th·ªã n√∫t ƒëƒÉng nh·∫≠p
            return (
                <li className="nav-item">
                    <NavLink className="nav-link text-dark" to="/login">Login</NavLink>
                </li>
            );
        }
    };

    // H√†m ƒëƒÉng xu·∫•t
    return (
        <header className='fixed-top '>
        <nav className="navbar navbar-expand-sm navbar-light bg-white border-bottom box-shadow "style={{ height: '56px'}} >
            <div className="container-fluid">
                <NavLink className="navbar-brand" to="/">GeneCare</NavLink>
                <button className="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span className="navbar-toggler-icon"></span>
                </button>
                <div className="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul className="navbar-nav flex-grow-1">
                        <li className="nav-item">
                            <NavLink className="nav-link text-dark" to="/">Home</NavLink>
                        </li>
                        <li className="nav-item">
                            <NavLink className="nav-link text-dark" to="/Instruction">Instructions</NavLink>
                        </li>
                        <li className="nav-item">
                            <NavLink className="nav-link text-dark" to="/">About</NavLink>
                        </li>
                        {/* <li className="nav-item">
                            <NavLink className="nav-link text-dark" to="/payment">Payment</NavLink>
                        </li> */}
                        <li className="nav-item">
                            <NavLink className="nav-link text-dark" to="/services">Services</NavLink>
                        </li>
                        <li className="nav-item">
                            <NavLink className="nav-link text-dark" to="/">Blog</NavLink>
                        </li>
						<li className="nav-item">
                            {handleLogin()}
                        </li>   
                    </ul>
                    {/*n√∫t ch·∫ø ƒë·ªô s√°ng t·ªëi */}
                    <p>{'ch∆∞a xong kh√¥ng ƒë·ª•ng gi√∫p tao ==>>>'} </p>
                    <button className="btn btn-outline-secondary ms-2"
                            onClick={() => setDarkMode(!darkMode)}
                            >
                            {darkMode ? "‚òÄ Light Mode" : "üåô Dark Mode"}
                    </button>
                </div>
            </div>
        </nav>
    </header>

    );
}
